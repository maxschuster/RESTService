<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="RESTService">
  <file path="inc.rest.php" hash="269272b0c554230d4789d844ace001f2" package="restservice">
    <docblock line="3">
      <description>This file includes all files that are necessary for RESTService.</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <include line="11" type="Require Once" package="Default">
      <name>RESTServiceControllerInterface.php</name>
    </include>
    <include line="12" type="Require Once" package="Default">
      <name>RESTAuthInterface.php</name>
    </include>
    <include line="15" type="Require Once" package="Default">
      <name>RESTRequest.php</name>
    </include>
    <include line="16" type="Require Once" package="Default">
      <name>RESTService.php</name>
    </include>
    <include line="17" type="Require Once" package="Default">
      <name>RESTServiceController.php</name>
    </include>
    <include line="18" type="Require Once" package="Default">
      <name>RESTServiceCRUDController.php</name>
    </include>
    <include line="19" type="Require Once" package="Default">
      <name>RESTAuth.php</name>
    </include>
    <include line="20" type="Require Once" package="Default">
      <name>RESTAuthDigest.php</name>
    </include>
  </file>
  <file path="RESTAuth.php" hash="3fa4132b1265b954849b3d26eac4adbd" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTAuth class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <class final="false" abstract="true" namespace="eu\maxschuster\rest" line="38" package="restservice">
      <extends/>
      <implements>\eu\maxschuster\rest\RESTAuthInterface</implements>
      <name>RESTAuth</name>
      <full_name>\eu\maxschuster\rest\RESTAuth</full_name>
      <docblock line="30">
        <description>This class can be used to perform a "Basic access authentication".</description>
        <long-description/>
        <tag line="30" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="30" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="30" name="see" description="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Basic_access_authentication" refers="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Basic_access_authentication"/>
        <tag line="30" name="package" description="restservice"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" namespace="eu\maxschuster\rest" package="Default">
        <name>$data</name>
        <default/>
        <docblock line="40">
          <description>Login data</description>
          <long-description/>
          <tag line="40" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="eu\maxschuster\rest" package="Default">
        <name>$realm</name>
        <default>'RESTService Auth'</default>
        <docblock line="46">
          <description>Realm</description>
          <long-description/>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="eu\maxschuster\rest" package="Default">
        <name>$service</name>
        <default/>
        <docblock line="52">
          <description>REST service</description>
          <long-description/>
          <tag line="52" name="var" description="" type="\eu\maxschuster\rest\RESTService">
            <type by_reference="false">\eu\maxschuster\rest\RESTService</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="eu\maxschuster\rest" package="Default">
        <name>$request</name>
        <default/>
        <docblock line="58">
          <description>Request</description>
          <long-description/>
          <tag line="58" name="var" description="" type="\eu\maxschuster\rest\RESTRequest">
            <type by_reference="false">\eu\maxschuster\rest\RESTRequest</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="68" package="restservice">
        <name>checkAuth</name>
        <full_name>checkAuth</full_name>
        <docblock line="64">
          <description>Checks the send login data</description>
          <long-description/>
          <tag line="64" name="return" description="Login data is correct" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="79" package="restservice">
        <name>generateError</name>
        <full_name>generateError</full_name>
        <docblock line="76">
          <description>Generates a 'HTTP/1.0 401 Unauthorized' error and will STOP the script.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="91" package="restservice">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="87">
          <description>Constructor of the auth class</description>
          <long-description/>
          <tag line="87" name="param" description="Calling RESTService" type="\eu\maxschuster\rest\RESTService" variable="$service">
            <type by_reference="false">\eu\maxschuster\rest\RESTService</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$service</name>
          <default/>
          <type>\eu\maxschuster\rest\RESTService</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="eu\maxschuster\rest" line="106" package="restservice">
        <name>validateData</name>
        <full_name>validateData</full_name>
        <docblock line="96">
          <description>This function must get overridden.</description>
          <long-description>&lt;p&gt;It should do the actualy check of the login data.
So run your database queries or what ever you use to check the login data
here. If you get complete user data in  this function you can store them
inside the RESTAuth::$data property so it can access it later using
RESTAuth::getData()&lt;/p&gt;</long-description>
          <tag line="96" name="see" description="\eu\maxschuster\rest\RESTAuth::$data" refers="\eu\maxschuster\rest\RESTAuth::$data"/>
          <tag line="96" name="see" description="\eu\maxschuster\rest\RESTAuth::getData()" refers="\eu\maxschuster\rest\RESTAuth::getData()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="114" package="restservice">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="108">
          <description>Can be used to access data that has eventually has been set through
RESTAuth::validateData()</description>
          <long-description/>
          <tag line="108" name="see" description="\eu\maxschuster\rest\RESTAuth::validateData()" refers="\eu\maxschuster\rest\RESTAuth::validateData()"/>
          <tag line="108" name="return" description="Data of different types" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="RESTAuthDigest.php" hash="9574da2a02cf66f316e1a4679b5ade97" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTAuth class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <class final="false" abstract="true" namespace="eu\maxschuster\rest" line="38" package="restservice">
      <extends>\eu\maxschuster\rest\RESTAuth</extends>
      <name>RESTAuthDigest</name>
      <full_name>\eu\maxschuster\rest\RESTAuthDigest</full_name>
      <docblock line="30">
        <description>I'll maybe finish this class later.</description>
        <long-description>&lt;p&gt;At the moment i have no use for it.&lt;/p&gt;</long-description>
        <tag line="30" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="30" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="30" name="see" description="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Digest_access_authentication" refers="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Digest_access_authentication"/>
        <tag line="30" name="package" description="restservice"/>
      </docblock>
    </class>
  </file>
  <file path="RESTAuthInterface.php" hash="289c63d72c84a7ad599f35c7853697b9" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTAuth class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <interface namespace="eu\maxschuster\rest" line="35" package="restservice">
      <name>RESTAuthInterface</name>
      <full_name>\eu\maxschuster\rest\RESTAuthInterface</full_name>
      <docblock line="28">
        <description>Interface for RESTService auth methods</description>
        <long-description/>
        <tag line="28" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="28" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="28" name="package" description="restservice"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="37" package="restservice">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="37">
          <name>$service</name>
          <default/>
          <type>\eu\maxschuster\rest\RESTService</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="43" package="restservice">
        <name>checkAuth</name>
        <full_name>checkAuth</full_name>
        <docblock line="39">
          <description>Checks the send login data</description>
          <long-description/>
          <tag line="39" name="return" description="Login data is correct" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="51" package="restservice">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="45">
          <description>Can be used to access data that has eventually has been set through
RESTAuth::validateData()</description>
          <long-description/>
          <tag line="45" name="see" description="\eu\maxschuster\rest\RESTAuth::validateData()" refers="\eu\maxschuster\rest\RESTAuth::validateData()"/>
          <tag line="45" name="return" description="Data of different types" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="56" package="restservice">
        <name>generateError</name>
        <full_name>generateError</full_name>
        <docblock line="53">
          <description>Generates an error, usually 'HTTP/1.0 401 Unauthorized'</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="eu\maxschuster\rest" line="65" package="restservice">
        <name>validateData</name>
        <full_name>validateData</full_name>
        <docblock line="58">
          <description>It should do the actualy check of the login data.</description>
          <long-description>&lt;p&gt;So run your database queries or what ever you use to check the login data
here. If you get complete user data in  this function you can store them
somewhere so it can access it later using RESTAuth::getData().&lt;/p&gt;</long-description>
          <tag line="58" name="see" description="\eu\maxschuster\rest\RESTAuthInterface::getData()" refers="\eu\maxschuster\rest\RESTAuthInterface::getData()"/>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="RESTRequest.php" hash="1897875b8a32c60391da9ce5a4e713c0" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTRequest class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <class final="false" abstract="false" namespace="eu\maxschuster\rest" line="34" package="restservice">
      <extends/>
      <name>RESTRequest</name>
      <full_name>\eu\maxschuster\rest\RESTRequest</full_name>
      <docblock line="28">
        <description>Contains the request and offers ways to access its data.</description>
        <long-description/>
        <tag line="28" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="28" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="28" name="package" description="restservice"/>
      </docblock>
      <constant namespace="eu\maxschuster\rest" line="40" package="restservice">
        <name>TYPE_UNKNOWN</name>
        <full_name>TYPE_UNKNOWN</full_name>
        <value>1</value>
        <docblock line="36">
          <description>Unknown Request type</description>
          <long-description/>
          <tag line="36" name="const" description="TYPE_UNKNOWN"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="46" package="restservice">
        <name>TYPE_GET</name>
        <full_name>TYPE_GET</full_name>
        <value>2</value>
        <docblock line="42">
          <description>Request type GET</description>
          <long-description/>
          <tag line="42" name="const" description="TYPE_GET"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="52" package="restservice">
        <name>TYPE_POST</name>
        <full_name>TYPE_POST</full_name>
        <value>4</value>
        <docblock line="48">
          <description>Request type POST</description>
          <long-description/>
          <tag line="48" name="const" description="TYPE_POST"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="58" package="restservice">
        <name>TYPE_PUT</name>
        <full_name>TYPE_PUT</full_name>
        <value>8</value>
        <docblock line="54">
          <description>Request type PUT</description>
          <long-description/>
          <tag line="54" name="const" description="TYPE_PUT"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="64" package="restservice">
        <name>TYPE_DELETE</name>
        <full_name>TYPE_DELETE</full_name>
        <value>16</value>
        <docblock line="60">
          <description>Request type DELETE</description>
          <long-description/>
          <tag line="60" name="const" description="TYPE_DELETE"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="70" package="restservice">
        <name>TYPE_ALL</name>
        <full_name>TYPE_ALL</full_name>
        <value>2147483647</value>
        <docblock line="66">
          <description>All request types</description>
          <long-description/>
          <tag line="66" name="const" description="TYPE_ALL"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="76" namespace="eu\maxschuster\rest" package="Default">
        <name>$type</name>
        <default/>
        <docblock line="72">
          <description>Request type; see TYPE_* constants</description>
          <long-description/>
          <tag line="72" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="eu\maxschuster\rest" package="Default">
        <name>$extension</name>
        <default/>
        <docblock line="78">
          <description>Requests file extension</description>
          <long-description/>
          <tag line="78" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="eu\maxschuster\rest" package="Default">
        <name>$filename</name>
        <default/>
        <docblock line="84">
          <description>Requests filename</description>
          <long-description/>
          <tag line="84" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="94" namespace="eu\maxschuster\rest" package="Default">
        <name>$path</name>
        <default/>
        <docblock line="90">
          <description>URI path segments parts</description>
          <long-description/>
          <tag line="90" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="100" namespace="eu\maxschuster\rest" package="Default">
        <name>$pathWithFilename</name>
        <default/>
        <docblock line="96">
          <description>URI path segments parts + filename</description>
          <long-description/>
          <tag line="96" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="106" namespace="eu\maxschuster\rest" package="Default">
        <name>$pathWithFilenameCount</name>
        <default/>
        <docblock line="102">
          <description>Number of elements inside $this-&gt;pathWithFilename</description>
          <long-description/>
          <tag line="102" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="112" namespace="eu\maxschuster\rest" package="Default">
        <name>$uri</name>
        <default/>
        <docblock line="108">
          <description>The given URI</description>
          <long-description/>
          <tag line="108" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="118" namespace="eu\maxschuster\rest" package="Default">
        <name>$username</name>
        <default/>
        <docblock line="114">
          <description>Username</description>
          <long-description/>
          <tag line="114" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="124" namespace="eu\maxschuster\rest" package="Default">
        <name>$password</name>
        <default/>
        <docblock line="120">
          <description>Password</description>
          <long-description/>
          <tag line="120" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="130" namespace="eu\maxschuster\rest" package="Default">
        <name>$digest</name>
        <default/>
        <docblock line="126">
          <description>Auth digest</description>
          <long-description/>
          <tag line="126" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="137" package="restservice">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="132">
          <description>Constructs a new request</description>
          <long-description/>
          <tag line="132" name="param" description="Request URI" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="155" package="restservice">
        <name>keywordValue</name>
        <full_name>keywordValue</full_name>
        <docblock line="146">
          <description>Gets the value/s for a keyword.</description>
          <long-description/>
          <tag line="146" name="param" description="Keyword to find" type="string" variable="$keyword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="Offset/s to get" type="int|array" variable="$offset">
            <type by_reference="false">int</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="146" name="return" description="Keywords value. Array if $offset is an array" type="array|string|null">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$keyword</name>
          <default/>
          <type/>
        </argument>
        <argument line="155">
          <name>$offset</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="185" package="restservice">
        <name>indexValue</name>
        <full_name>indexValue</full_name>
        <docblock line="180">
          <description>Gets the value of the given index.</description>
          <long-description/>
          <tag line="180" name="param" description="Index to search" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="180" name="return" description="Value for index" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="195" package="restservice">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="190">
          <description>Gets the request type; see TYPE_* constants</description>
          <long-description/>
          <tag line="190" name="return" description="Request type" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="204" package="restservice">
        <name>setType</name>
        <full_name>setType</full_name>
        <docblock line="199">
          <description>Gets the request type; see TYPE_* constants</description>
          <long-description/>
          <tag line="199" name="param" description="Request type" type="int|string" variable="$type">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="236" package="restservice">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="232">
          <description>Gets the requests file extension</description>
          <long-description/>
          <tag line="232" name="return" description="Requests file extension" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="244" package="restservice">
        <name>setExtension</name>
        <full_name>setExtension</full_name>
        <docblock line="240">
          <description>Sets the requests file extension</description>
          <long-description/>
          <tag line="240" name="param" description="Requests file extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="244">
          <name>$extension</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="252" package="restservice">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="248">
          <description>Gets the seperated path segments</description>
          <long-description/>
          <tag line="248" name="return" description="Seperated path segments" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="260" package="restservice">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="256">
          <description>Sets the seperated path segments</description>
          <long-description/>
          <tag line="256" name="param" description="Seperated path segments" type="array" variable="$path">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="268" package="restservice">
        <name>getUri</name>
        <full_name>getUri</full_name>
        <docblock line="264">
          <description>Gets the requests URI</description>
          <long-description/>
          <tag line="264" name="return" description="Requests URI" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="276" package="restservice">
        <name>setUri</name>
        <full_name>setUri</full_name>
        <docblock line="272">
          <description>Sets the requests URI</description>
          <long-description/>
          <tag line="272" name="param" description="Requests URI" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="305" package="restservice">
        <name>getFilename</name>
        <full_name>getFilename</full_name>
        <docblock line="301">
          <description>Gets the requests filename</description>
          <long-description/>
          <tag line="301" name="return" description="Request filename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="313" package="restservice">
        <name>setFilename</name>
        <full_name>setFilename</full_name>
        <docblock line="309">
          <description>Sets the requests filename</description>
          <long-description/>
          <tag line="309" name="param" description="Request filename" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="313">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="321" package="restservice">
        <name>getPathWithFilename</name>
        <full_name>getPathWithFilename</full_name>
        <docblock line="317">
          <description>Get path segments + filename</description>
          <long-description/>
          <tag line="317" name="return" description="Path segments + filename" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="329" package="restservice">
        <name>setPathWithFilename</name>
        <full_name>setPathWithFilename</full_name>
        <docblock line="325">
          <description>Set path segments + filename</description>
          <long-description/>
          <tag line="325" name="param" description="Path segments + filename" type="array" variable="$pathWithFilename">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$pathWithFilename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="339" package="restservice">
        <name>getUsername</name>
        <full_name>getUsername</full_name>
        <docblock line="334">
          <description>Gets the HTTP Auth user name.</description>
          <long-description>&lt;p&gt;Returns false if no username has been
provided.&lt;/p&gt;</long-description>
          <tag line="334" name="return" description="HTTP Auth user name" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="347" package="restservice">
        <name>setUsername</name>
        <full_name>setUsername</full_name>
        <docblock line="343">
          <description>Sets the HTTP Auth user name</description>
          <long-description/>
          <tag line="343" name="param" description="HTTP Auth user name" type="string|bool" variable="$username">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="356" package="restservice">
        <name>getPassword</name>
        <full_name>getPassword</full_name>
        <docblock line="351">
          <description>Gets the HTTP Auth password.</description>
          <long-description>&lt;p&gt;Returns false if no password has been
provided.&lt;/p&gt;</long-description>
          <tag line="351" name="return" description="HTTP Auth password" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="364" package="restservice">
        <name>setPassword</name>
        <full_name>setPassword</full_name>
        <docblock line="360">
          <description>Sets the HTTP Auth password</description>
          <long-description/>
          <tag line="360" name="param" description="HTTP Auth password" type="string|bool" variable="$password">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="373" package="restservice">
        <name>getDigest</name>
        <full_name>getDigest</full_name>
        <docblock line="368">
          <description>Gets the HTTP Auth digest.</description>
          <long-description>&lt;p&gt;Returns false if no digest has been
provided.&lt;/p&gt;</long-description>
          <tag line="368" name="return" description="HTTP Auth digest" type="string|bool">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="381" package="restservice">
        <name>setDigest</name>
        <full_name>setDigest</full_name>
        <docblock line="377">
          <description>Sets the HTTP Auth digest</description>
          <long-description/>
          <tag line="377" name="param" description="HTTP Auth digest" type="string|bool" variable="$digest">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$digest</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="RESTService.php" hash="a2bed76f76a879b6628288a4ddeddcf8" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTService class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <class final="false" abstract="false" namespace="eu\maxschuster\rest" line="36" package="restservice">
      <extends/>
      <name>RESTService</name>
      <full_name>\eu\maxschuster\rest\RESTService</full_name>
      <docblock line="28">
        <description>This class represents the rest service.</description>
        <long-description>&lt;p&gt;Controller can be registered in an
instance of this class and this class seeks the right controller for the
request to be processed.&lt;/p&gt;</long-description>
        <tag line="28" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="28" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="28" name="package" description="restservice"/>
      </docblock>
      <constant namespace="eu\maxschuster\rest" line="58" package="restservice">
        <name>STATUS_OK</name>
        <full_name>STATUS_OK</full_name>
        <value>200</value>
        <docblock line="49">
          <description>200 OK:
Standard response for successful HTTP requests.</description>
          <long-description>&lt;p&gt;The actual response will
depend on the request method used. In a GET request, the response will
contain an entity corresponding to the requested resource. In a POST
request the response will contain an entity describing or containing the
result of the action.&lt;/p&gt;</long-description>
          <tag line="49" name="const" description="STATUS_OK"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="66" package="restservice">
        <name>STATUS_CREATED</name>
        <full_name>STATUS_CREATED</full_name>
        <value>201</value>
        <docblock line="60">
          <description>201 Created:
The request has been fulfilled and resulted in a new resource being
created.</description>
          <long-description/>
          <tag line="60" name="const" description="STATUS_CREATED"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="75" package="restservice">
        <name>STATUS_ACCEPTED</name>
        <full_name>STATUS_ACCEPTED</full_name>
        <value>202</value>
        <docblock line="68">
          <description>202 Accepted:
The request has been accepted for processing, but the processing has not
been completed.</description>
          <long-description>&lt;p&gt;The request might or might not eventually be acted upon,
as it might be disallowed when processing actually takes place.&lt;/p&gt;</long-description>
          <tag line="68" name="const" description="STATUS_ACCEPTED"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="83" package="restservice">
        <name>STATUS_NO_CONTENT</name>
        <full_name>STATUS_NO_CONTENT</full_name>
        <value>204</value>
        <docblock line="77">
          <description>204 No Content:
The server successfully processed the request, but is not returning any
content.</description>
          <long-description/>
          <tag line="77" name="const" description="STATUS_NO_CONTENT"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="94" package="restservice">
        <name>STATUS_BAD_REQUEST</name>
        <full_name>STATUS_BAD_REQUEST</full_name>
        <value>400</value>
        <docblock line="89">
          <description>400 Bad Request:
The request cannot be fulfilled due to bad syntax.</description>
          <long-description/>
          <tag line="89" name="const" description="STATUS_BAD_REQUEST"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="105" package="restservice">
        <name>STATUS_UNAUTHORIZED</name>
        <full_name>STATUS_UNAUTHORIZED</full_name>
        <value>401</value>
        <docblock line="96">
          <description>401 Unauthorized:
Similar to 403 Forbidden, but specifically for use when authentication is
required and has failed or has not yet been provided.</description>
          <long-description>&lt;p&gt;The response must
include a WWW-Authenticate header field containing a challenge applicable
to the requested resource. See Basic access authentication and Digest
access authentication.&lt;/p&gt;</long-description>
          <tag line="96" name="const" description="STATUS_UNAUTHORIZED"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="118" package="restservice">
        <name>STATUS_FORBIDDEN</name>
        <full_name>STATUS_FORBIDDEN</full_name>
        <value>403</value>
        <docblock line="107">
          <description>403 Forbidden:
The request was a valid request, but the server is refusing to respond to
it.</description>
          <long-description>&lt;p&gt;Unlike a 401 Unauthorized response, authenticating will make no
difference. On servers where authentication is required, this commonly
means that the provided credentials were successfully authenticated but
that the credentials still do not grant the client permission to access
the resource (e.g. a recognized user attempting to access restricted
content).&lt;/p&gt;</long-description>
          <tag line="107" name="const" description="STATUS_FORBIDDEN"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="126" package="restservice">
        <name>STATUS_NOT_FOUND</name>
        <full_name>STATUS_NOT_FOUND</full_name>
        <value>404</value>
        <docblock line="120">
          <description>404 Not Found:
The requested resource could not be found but may be available again in
the future.</description>
          <long-description>&lt;p&gt;Subsequent requests by the client are permissible.&lt;/p&gt;</long-description>
          <tag line="120" name="const" description="STATUS_NOT_FOUND"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="135" package="restservice">
        <name>STATUS_METHOD_NOT_ALLOWED</name>
        <full_name>STATUS_METHOD_NOT_ALLOWED</full_name>
        <value>405</value>
        <docblock line="128">
          <description>405 Method Not Allowed:
A request was made of a resource using a request method not supported by
that resource; for example, using GET on a form which requires data to be
presented via POST, or using PUT on a read-only resource.</description>
          <long-description/>
          <tag line="128" name="const" description="STATUS_METHOD_NOT_ALLOWED"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="143" package="restservice">
        <name>STATUS_CONFLICT</name>
        <full_name>STATUS_CONFLICT</full_name>
        <value>409</value>
        <docblock line="137">
          <description>409 Conflict:
Indicates that the request could not be processed because of conflict in
the request, such as an edit conflict.</description>
          <long-description/>
          <tag line="137" name="const" description="STATUS_CONFLICT"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="153" package="restservice">
        <name>STATUS_INTERNAL_SERVER_ERROR</name>
        <full_name>STATUS_INTERNAL_SERVER_ERROR</full_name>
        <value>500</value>
        <docblock line="148">
          <description>500 Internal Server Error:
A generic error message, given when no more specific message is suitable.</description>
          <long-description/>
          <tag line="148" name="const" description="STATUS_INTERNAL_SERVER_ERROR"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="161" package="restservice">
        <name>STATUS_NOT_IMPLEMENTED</name>
        <full_name>STATUS_NOT_IMPLEMENTED</full_name>
        <value>501</value>
        <docblock line="155">
          <description>501 Not Implemented:
The server either does not recognize the request method, or it lacks the
ability to fulfill the request.</description>
          <long-description/>
          <tag line="155" name="const" description="STATUS_NOT_IMPLEMENTED"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="167" package="restservice">
        <name>CONTENT_TYPE_JSON</name>
        <full_name>CONTENT_TYPE_JSON</full_name>
        <value>'application/json'</value>
        <docblock line="163">
          <description>Mimetype for json</description>
          <long-description/>
          <tag line="163" name="const" description="CONTENT_TYPE_JSON"/>
        </docblock>
      </constant>
      <constant namespace="eu\maxschuster\rest" line="173" package="restservice">
        <name>CONTENT_TYPE_TEXT</name>
        <full_name>CONTENT_TYPE_TEXT</full_name>
        <value>'text/plain'</value>
        <docblock line="169">
          <description>Mimetype for plain text</description>
          <long-description/>
          <tag line="169" name="const" description="CONTENT_TYPE_JSON"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="179" namespace="eu\maxschuster\rest" package="Default">
        <name>$controllers</name>
        <default>array()</default>
        <docblock line="175">
          <description>Collection of controllers</description>
          <long-description/>
          <tag line="175" name="var" description="" type="\eu\maxschuster\rest\RESTServiceControllerInterface[]">
            <type by_reference="false">\eu\maxschuster\rest\RESTServiceControllerInterface[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="185" namespace="eu\maxschuster\rest" package="Default">
        <name>$request</name>
        <default/>
        <docblock line="181">
          <description>Parsed request</description>
          <long-description/>
          <tag line="181" name="var" description="" type="\eu\maxschuster\rest\RESTRequest">
            <type by_reference="false">\eu\maxschuster\rest\RESTRequest</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="192" package="restservice">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="187">
          <description>Constructs the rest service</description>
          <long-description/>
          <tag line="187" name="param" description="Request URI from REWRITE or any other source" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="205" package="restservice">
        <name>addController</name>
        <full_name>addController</full_name>
        <docblock line="196">
          <description>Adds one or multible controllers to the service</description>
          <long-description/>
          <tag line="196" name="param" description="Controller for the RESTService that implements&#13;&#10;the RESTServiceControllerInterface interface." type="\eu\maxschuster\rest\RESTServiceControllerInterface" variable="$controller">
            <type by_reference="false">\eu\maxschuster\rest\RESTServiceControllerInterface</type>
          </tag>
          <tag line="196" name="param" description="[optional]&#13;&#10;Additional controllers..." type="\eu\maxschuster\rest\RESTServiceControllerInterface" variable="$_">
            <type by_reference="false">\eu\maxschuster\rest\RESTServiceControllerInterface</type>
          </tag>
          <tag line="196" name="throws" description="" type="\UnexpectedValueException">
            <type by_reference="false">\UnexpectedValueException</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="205">
          <name>$_</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="223" package="restservice">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="219">
          <description>Get parsed request</description>
          <long-description/>
          <tag line="219" name="return" description="Parsed request" type="\eu\maxschuster\rest\RESTRequest">
            <type by_reference="false">\eu\maxschuster\rest\RESTRequest</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="235" package="restservice">
        <name>setStatus</name>
        <full_name>setStatus</full_name>
        <docblock line="227">
          <description>Sets the response HTTP status code.</description>
          <long-description>&lt;p&gt;Be shure to call this function before
any content has been send to the client.&lt;/p&gt;</long-description>
          <tag line="227" name="param" description="HTTP status code; see STATUS_* constants!" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="227" name="see" description="\eu\maxschuster\rest\RESTService::STATUS_OK" refers="\eu\maxschuster\rest\RESTService::STATUS_OK"/>
          <tag line="227" name="see" description="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/List_of_HTTP_status_codes" refers="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/List_of_HTTP_status_codes"/>
          <tag line="227" name="see" description="\eu\maxschuster\rest\http://php.net/manual/en/function.header.php" refers="\eu\maxschuster\rest\http://php.net/manual/en/function.header.php"/>
        </docblock>
        <argument line="235">
          <name>$status</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="247" package="restservice">
        <name>setContentType</name>
        <full_name>setContentType</full_name>
        <docblock line="240">
          <description>Sets the response content type.</description>
          <long-description>&lt;p&gt;Be shure to call this function before
any content has been send to the client.&lt;/p&gt;</long-description>
          <tag line="240" name="param" description="" type="string" variable="$mimetype">
            <type by_reference="false">string</type>
          </tag>
          <tag line="240" name="see" description="\eu\maxschuster\rest\http://php.net/manual/en/function.header.php" refers="\eu\maxschuster\rest\http://php.net/manual/en/function.header.php"/>
          <tag line="240" name="see" description="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Content-type" refers="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Content-type"/>
        </docblock>
        <argument line="247">
          <name>$mimetype</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="255" package="restservice">
        <name>handle</name>
        <full_name>handle</full_name>
        <docblock line="251">
          <description>Start to handle the request.</description>
          <long-description/>
          <tag line="251" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="RESTServiceController.php" hash="3df93fc67eb545e3ea515ab1cafa18aa" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTServiceController class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <class final="false" abstract="true" namespace="eu\maxschuster\rest" line="34" package="restservice">
      <extends/>
      <implements>\eu\maxschuster\rest\RESTServiceControllerInterface</implements>
      <name>RESTServiceController</name>
      <full_name>\eu\maxschuster\rest\RESTServiceController</full_name>
      <docblock line="28">
        <description>Primitive RESTService controller.</description>
        <long-description/>
        <tag line="28" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="28" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="28" name="package" description="restservice"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" namespace="eu\maxschuster\rest" package="Default">
        <name>$service</name>
        <default/>
        <docblock line="35">
          <description>The calling RESTService.</description>
          <long-description/>
          <tag line="35" name="var" description="" type="\eu\maxschuster\rest\RESTService">
            <type by_reference="false">\eu\maxschuster\rest\RESTService</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="eu\maxschuster\rest" package="Default">
        <name>$request</name>
        <default/>
        <docblock line="41">
          <description>The RESTRequest to handle.</description>
          <long-description/>
          <tag line="41" name="var" description="" type="\eu\maxschuster\rest\RESTRequest">
            <type by_reference="false">\eu\maxschuster\rest\RESTRequest</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="eu\maxschuster\rest" package="Default">
        <name>$supportedExtensions</name>
        <default/>
        <docblock line="47">
          <description>Array with supported extensions.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="58" package="restservice">
        <name>setService</name>
        <full_name>setService</full_name>
        <docblock line="53">
          <description>Sets the calling RESTService.</description>
          <long-description/>
          <tag line="53" name="param" description="Calling RESTService" type="\eu\maxschuster\rest\RESTService" variable="$sevice">
            <type by_reference="false">\eu\maxschuster\rest\RESTService</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$sevice</name>
          <default/>
          <type>\eu\maxschuster\rest\RESTService</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="RESTServiceControllerInterface.php" hash="bf17f94f93e23b3784ac378531074701" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTServiceControllerInterface interface</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <interface namespace="eu\maxschuster\rest" line="35" package="restservice">
      <name>RESTServiceControllerInterface</name>
      <full_name>\eu\maxschuster\rest\RESTServiceControllerInterface</full_name>
      <docblock line="28">
        <description>Interface for all RESTService controllers, that could get registered at
RESTService instance.</description>
        <long-description/>
        <tag line="28" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="28" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="28" name="package" description="restservice"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="42" package="restservice">
        <name>setService</name>
        <full_name>setService</full_name>
        <docblock line="37">
          <description>Sets the calling RESTService.</description>
          <long-description/>
          <tag line="37" name="param" description="Calling RESTService" type="\eu\maxschuster\rest\RESTService" variable="$sevice">
            <type by_reference="false">\eu\maxschuster\rest\RESTService</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$sevice</name>
          <default/>
          <type>\eu\maxschuster\rest\RESTService</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="49" package="restservice">
        <name>checkResponsibility</name>
        <full_name>checkResponsibility</full_name>
        <docblock line="44">
          <description>Checks if this Controller can handle the current request.</description>
          <long-description/>
          <tag line="44" name="return" description="Controller can handle the current request" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="54" package="restservice">
        <name>handle</name>
        <full_name>handle</full_name>
        <docblock line="51">
          <description>Handles the current request.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="62" package="restservice">
        <name>extensionSupported</name>
        <full_name>extensionSupported</full_name>
        <docblock line="56">
          <description>Checks if the given extension is supported.</description>
          <long-description/>
          <tag line="56" name="param" description="Extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="return" description="Extension is supported" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$extension</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="RESTServiceCRUDController.php" hash="f0bf5bf6f254c9b1c2be5d0ea677343b" package="restservice">
    <docblock line="3">
      <description>This file contains the RESTServiceCRUDController class</description>
      <long-description/>
      <tag line="3" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
      <tag line="3" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
      <tag line="3" name="package" description="restservice"/>
    </docblock>
    <class final="false" abstract="true" namespace="eu\maxschuster\rest" line="36" package="restservice">
      <extends>\eu\maxschuster\rest\RESTServiceController</extends>
      <name>RESTServiceCRUDController</name>
      <full_name>\eu\maxschuster\rest\RESTServiceCRUDController</full_name>
      <docblock line="28">
        <description>Primitive RESTService CRUD controller.</description>
        <long-description>&lt;p&gt;Can be used as Template for
controllers that create, read, update and delete resources&lt;/p&gt;</long-description>
        <tag line="28" name="author" description="Max Schuster &lt;dev@maxschuster.eu&gt;"/>
        <tag line="28" name="license" description="http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0"/>
        <tag line="28" name="package" description="restservice"/>
        <tag line="28" name="see" description="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Create,_read,_update_and_delete" refers="\eu\maxschuster\rest\http://en.wikipedia.org/wiki/Create,_read,_update_and_delete"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="eu\maxschuster\rest" line="40" package="restservice">
        <name>handle</name>
        <full_name>handle</full_name>
        <docblock line="37">
          <description>Handles the current request.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="60" package="restservice">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="57">
          <description>Creates a new resource.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="65" package="restservice">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="62">
          <description>Reads an existing resource.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="70" package="restservice">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="67">
          <description>Updates an existing resource.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="eu\maxschuster\rest" line="75" package="restservice">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="72">
          <description>Deletes an existing resource.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="restservice" full_name="restservice"/>
  <namespace name="eu" full_name="eu">
    <namespace name="maxschuster" full_name="eu\maxschuster">
      <namespace name="rest" full_name="eu\maxschuster\rest"/>
    </namespace>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
